name: Deploy AKS LTS Prow
on: [push, workflow_dispatch]
jobs:
  Deploy_AKS_LTS_Prow:
    runs-on: ubuntu-latest
    env:
      KUBECONFIG: ./kubeconfig-aks-lts-prow
      GITHUB_APP_ID: ${{ vars.APP_ID }}
      GITHUB_ORG: ${{ vars.ORG }}
      GITHUB_REPO: ${{ vars.REPO }}
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
      PROW_HOST: ${{ vars.PROW_HOST }}
      AZURE_STORAGE_ACCOUNT_USER: ${{ vars.AZURE_STORAGE_ACCOUNT_USER }}
      AZURE_STORAGE_ACCOUNT_PASSWORD: ${{ secrets.AZURE_STORAGE_ACCOUNT_PASSWORD }}
      HMAC_TOKEN: ${{ secrets.HMAC_TOKEN }}
      MINIO_CONSOLE_PORT: ${{ vars.MINIO_CONSOLE_PORT }}
      FAKE_MOUNT_SECRET: ${{ secrets.FAKE_MOUNT_SECRET }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Prow cluster Bicep
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ vars.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ vars.AZURE_RG }}
          template: ./config/prow/cluster/prow-cluster.bicep
          failOnStdErr: true

      # TODO ^^ read outputs

      - name: Write kubeconfig
        run: echo ${{ secrets.AKS_LTS_PROW_KUBECONFIG }} | base64 -d > ./kubeconfig-aks-lts-prow

      - name: Install Kubectl
        uses: azure/setup-kubectl@v3

      - name: 'Apply Prow base manifests'
        run: for f in config/prow/k8s/base/*.yaml; do kubectl apply --server-side=true -f $f; done

      - name: 'Create GitHub Token secret'
        run: |
          echo $GITHUB_TOKEN | base64 -d > cert.pem
          kubectl delete secret github-token -n prow || echo "no existing secret to clean up"
          kubectl create secret generic github-token -n prow --from-file=cert=cert.pem --from-literal=appid=$GITHUB_APP_ID
          rm cert.pem

      - name: 'Apply Prow app manifests'
        run: for f in config/prow/k8s/app/*.yaml; do envsubst < $f | kubectl apply -f -; done
