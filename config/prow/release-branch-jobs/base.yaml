prowjob_namespace: prow
pod_namespace: test-pods

in_repo_config:
  enabled:
    "*": true

deck:
  spyglass:
    lenses:
      - lens:
          name: metadata
        required_files:
          - started.json|finished.json
      - lens:
          config:
          name: buildlog
        required_files:
          - build-log.txt
      - lens:
          name: junit
        required_files:
          - .*/junit.*\.xml
      - lens:
          name: podinfo
        required_files:
          - podinfo.json

plank:
  job_url_prefix_config:
    "*": https://$PROW_HOST/view/
  report_templates:
    '*': >-
      [Full PR test history](https://$PROW_HOST/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}).
      [Your PR dashboard](https://$PROW_HOST/pr?query=is:pr+state:open+author:{{with
      index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).
  default_decoration_config_entries:
    - config:
        gcs_configuration:
          bucket: s3://prow-logs
          path_strategy: explicit
          default_org: $GITHUB_ORG
          default_repo: $GITHUB_REPO
        github_api_endpoints:
          - http://ghproxy
          - https://api.github.com
        github_app_id: "$GITHUB_APP_ID"
        github_app_private_key_secret:
          name: github-token
          key: cert
        s3_credentials_secret: s3-credentials
        utility_images:
          clonerefs: gcr.io/k8s-prow/clonerefs:$K8S_PROW_IMAGE_TAG
          entrypoint: gcr.io/k8s-prow/entrypoint:$K8S_PROW_IMAGE_TAG
          initupload: gcr.io/k8s-prow/initupload:$K8S_PROW_IMAGE_TAG
          sidecar: gcr.io/k8s-prow/sidecar:$K8S_PROW_IMAGE_TAG

presets:
# docker-in-docker (with images/bootstrap) preset
# NOTE: using this also requires using that image,
# ensuring you run your test under either the ENTRYPOINT or:
# /usr/local/bin/runner.sh my-test-command --foo --bar
# AND setting the following on your PodSpec:
# securityContext:
#   privileged: true
- labels:
    preset-dind-enabled: "true"
  env:
  - name: DOCKER_IN_DOCKER_ENABLED
    value: "true"
  volumes:
  # kubekins-e2e legacy path
  - name: docker-graph
    emptyDir: {}
  # krte (normal) path
  - name: docker-root
    emptyDir: {}
  # we need to modprobe ipv6 iptables
  # TODO: move this out of being done in the jobs
  - name: modules
    hostPath:
      path: /lib/modules
      type: Directory
  volumeMounts:
  - name: docker-graph
    mountPath: /docker-graph
  - name: docker-root
    mountPath: /var/lib/docker
  - mountPath: /lib/modules
    name: modules
    readOnly: true
# volume mounts for kind
- labels:
    preset-kind-volume-mounts: "true"
  volumeMounts:
    - mountPath: /sys/fs/cgroup
      name: cgroup
  volumes:
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
# gomaxprocs preset
- labels:
    preset-gomaxprocs: "true"
  env:
  - name: GOMAXPROCS
    valueFrom:
      resourceFieldRef:
        resource: limits.cpu
# capz-windows-common
- labels:
    preset-capz-windows-common: "true"
  env:
  - name: E2E_ARGS
    value: "-kubetest.use-ci-artifacts"
  - name: WINDOWS
    value: "true"
  - name: TEST_WINDOWS #temp to unblock failing jobs on windows while we fix this in capz (https://github.com/kubernetes/kubernetes/issues/116474)
    value: "true"
  - name: AZURE_NODE_MACHINE_TYPE
    value: "Standard_D4s_v3"
# capz-windows-2019
- labels:
    preset-capz-windows-2019: "true"
  env:
  - name: WINDOWS_FLAVOR
    value: "containerd"
# capz-windows-2019-latest
- labels:
    preset-capz-containerd-1-7-latest: "true"
  env:
  - name: WINDOWS_CONTAINERD_URL
    value: "https://github.com/containerd/containerd/releases/download/v1.7.18/containerd-1.7.18-windows-amd64.tar.gz"
# preset-azure-community
- labels:
    preset-azure-community: "true"
  env: # below env values are not secrets
  - name: AZURE_CLIENT_ID
    value: "34d8e06d-d198-477e-b166-6936e58d90ae"
  - name: AZURE_SUBSCRIPTION_ID
    value: "46678f10-4bbb-447e-98e8-d2829589f2d8"
  - name: AZURE_TENANT_ID
    value: "d1aa7522-0959-442e-80ee-8c4f7fb4c184"
  - name: AZURE_FEDERATED_TOKEN_FILE
    value: "/var/run/secrets/azure-token/serviceaccount/token"
  - name: AZURE_STORAGE_ACCOUNT
    value: "k8sprowstoragecomm"
  - name: REGISTRY
    value: "capzcicommunity.azurecr.io"
  - name: USE_LOCAL_KIND_REGISTRY
    value: "false"
  volumes:
  - name: azure-token
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 86400
          path: token
          audience: api://AzureADTokenExchange
  volumeMounts:
  - mountPath: /var/run/secrets/azure-token/serviceaccount
    name: azure-token
    readOnly: true

tide:
  queries:
    - labels:
        - lgtm
        - approved
      missingLabels:
        - needs-rebase
        - do-not-merge/hold
        - do-not-merge/work-in-progress
        - do-not-merge/invalid-owners-file
      orgs:
        - $GITHUB_ORG

decorate_all_jobs: true

periodics:
- interval: 24h
  agent: kubernetes
  name: echo-test
  decorate: true
  namespace: test-pods
  spec:
    containers:
      - image: alpine
        command: ["/bin/date"]
postsubmits: {}
presubmits:
  $GITHUB_ORG/$GITHUB_REPO: