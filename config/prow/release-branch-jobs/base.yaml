prowjob_namespace: prow
pod_namespace: test-pods

in_repo_config:
  enabled:
    "*": true

deck:
  spyglass:
    lenses:
      - lens:
          name: metadata
        required_files:
          - started.json|finished.json
      - lens:
          config:
          name: buildlog
        required_files:
          - build-log.txt
      - lens:
          name: junit
        required_files:
          - .*/junit.*\.xml
      - lens:
          name: podinfo
        required_files:
          - podinfo.json

plank:
  job_url_prefix_config:
    "*": https://$PROW_HOST/view/
  report_templates:
    '*': >-
      [Full PR test history](https://$PROW_HOST/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}).
      [Your PR dashboard](https://$PROW_HOST/pr?query=is:pr+state:open+author:{{with
      index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).
  default_decoration_config_entries:
    - config:
        gcs_configuration:
          bucket: s3://prow-logs
          path_strategy: explicit
          default_org: $GITHUB_ORG
          default_repo: $GITHUB_REPO
        github_api_endpoints:
          - http://ghproxy
          - https://api.github.com
        github_app_id: "$GITHUB_APP_ID"
        github_app_private_key_secret:
          name: github-token
          key: cert
        s3_credentials_secret: s3-credentials
        utility_images:
          clonerefs: gcr.io/k8s-prow/clonerefs:$K8S_PROW_IMAGE_TAG
          entrypoint: gcr.io/k8s-prow/entrypoint:$K8S_PROW_IMAGE_TAG
          initupload: gcr.io/k8s-prow/initupload:$K8S_PROW_IMAGE_TAG
          sidecar: gcr.io/k8s-prow/sidecar:$K8S_PROW_IMAGE_TAG

presets:
# docker-in-docker (with images/bootstrap) preset
# NOTE: using this also requires using that image,
# ensuring you run your test under either the ENTRYPOINT or:
# /usr/local/bin/runner.sh my-test-command --foo --bar
# AND setting the following on your PodSpec:
# securityContext:
#   privileged: true
- labels:
    preset-dind-enabled: "true"
  env:
  - name: DOCKER_IN_DOCKER_ENABLED
    value: "true"
  volumes:
  # kubekins-e2e legacy path
  - name: docker-graph
    emptyDir: {}
  # krte (normal) path
  - name: docker-root
    emptyDir: {}
  # we need to modprobe ipv6 iptables
  # TODO: move this out of being done in the jobs
  - name: modules
    hostPath:
      path: /lib/modules
      type: Directory
  volumeMounts:
  - name: docker-graph
    mountPath: /docker-graph
  - name: docker-root
    mountPath: /var/lib/docker
  - mountPath: /lib/modules
    name: modules
    readOnly: true
# volume mounts for kind
- labels:
    preset-kind-volume-mounts: "true"
  volumeMounts:
    - mountPath: /sys/fs/cgroup
      name: cgroup
  volumes:
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
# gomaxprocs preset
- labels:
    preset-gomaxprocs: "true"
  env:
  - name: GOMAXPROCS
    valueFrom:
      resourceFieldRef:
        resource: limits.cpu

tide:
  queries:
    - labels:
        - lgtm
        - approved
      missingLabels:
        - needs-rebase
        - do-not-merge/hold
        - do-not-merge/work-in-progress
        - do-not-merge/invalid-owners-file
      orgs:
        - $GITHUB_ORG

decorate_all_jobs: true

periodics:
- interval: 24h
  agent: kubernetes
  name: echo-test
  decorate: true
  namespace: test-pods
  spec:
    containers:
      - image: alpine
        command: ["/bin/date"]
postsubmits: {}
presubmits:
  $GITHUB_ORG/$GITHUB_REPO: